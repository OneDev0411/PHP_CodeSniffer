#!/usr/bin/env php
<?php
/**
 * Build a PHPCS phar.
 *
 * PHP version 5
 *
 * @category  PHP
 * @package   PHP_CodeSniffer
 * @author    Benjamin Pearson <bpearson@squiz.com.au>
 * @copyright 2006-2012 Squiz Pty Ltd (ABN 77 084 670 600)
 * @license   https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt BSD Licence
 * @link      http://pear.php.net/package/PHP_CodeSniffer
 */

error_reporting(E_ALL | E_STRICT);

if (ini_get('phar.readonly') === '1') {
    echo 'Unable to build, phar.readonly in php.ini is set to read only.'."\n";
    exit(1);
}

$validOptions = array(
                 '--build-full'     => 'Build a full installation of phpcs (including tests)',
                 '--build-only'     => 'Build phpcs with only the specified standard.',
                 '--build-standard' => 'Build the standard phpcs',
                );
$requireOpts  = array('--build-only');

$name     = NULL;
$options  = array();
$destDir  = dirname(dirname(__FILE__));
$showHelp = false;
foreach ($argv as $index => $arg) {
    if ($arg === '--help') {
        $showHelp = 'Showing help...';
        break;
    }

    if ($index === 0) {
        // Skipping script name.
        continue;
    } else if ($index === 1 && strpos($arg, '-') !== 0) {
        $name = $arg;
    } else if ($index === 2 && strpos($arg, '-') !== 0) {
        $destDir = $arg;
    } else {
        // Other arg.
        $value = null;
        if (strpos($arg, '--') === 0 && strpos($arg, '=') !== false) {
            list($arg, $value) = explode('=', $arg);
            if (array_key_exists($arg, $validOptions) === false) {
                $showHelp = 'Not a valid arg: '.$arg;
            }
        } else if (strpos($arg, '--') === 0 && strpos($arg, '=') === false) {
            $value = true;

            if (array_key_exists($arg, $validOptions) === false) {
                $showHelp = 'Not a valid arg: '.$arg;
            } else if (in_array($arg, $requireOpts) === true) {
                $showHelp = 'Missing value on '.$arg;
            }
        } else {
            $showHelp = 'Unknown arg: '.$arg;
        }

        $arg           = ltrim($arg, '-');
        $options[$arg] = $value;
    }
}

if ($name === NULL || $showHelp !== false) {
    if ($showHelp !== false) {
        echo $showHelp."\n";
    }

    echo 'Usage: '.$argv[0].' <name> <destinationDir> <options>'."\n";
    echo ' where <options> can be:'."\n";
    foreach ($validOptions as $option => $optHelp) {
        echo "\t".$option;
        $max = 20;
        if (in_array($option, $requireOpts) === true) {
            echo '=xx';
            $max = ($max - 3);
        }

        echo str_pad('', ($max - strlen($option)), ' ');
        echo $optHelp."\n";
    }

    exit(0);
}

if (is_file(dirname(__FILE__).'/../CodeSniffer.php') === true) {
    include_once dirname(__FILE__).'/../CodeSniffer.php';
} else {
    include_once 'PHP/CodeSniffer.php';
}

PHP_CodeSniffer::build($name, $destDir, $options);
